{
  "name": "library",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "css.validate": false,
  "scss.validate": false,
  "less.validate": false,
  "scripts": {
    "start": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview",
    "dev:server": "node server/simple-server.js",
    "dev": "run-p dev:server vite",
    "build:server": "tsc -p server/tsconfig.json",
    "start:server": "node dist/server/index.js",
    "gen:default": "node -e \"import('./src/generator/builders.ts').then(m => console.log(JSON.stringify(m.buildDefaultConfig({name: 'Default Company'}), null, 2)))\" > PageConfig.json",
    "gen:random": "node -e \"import('./src/generator/builders.ts').then(m => console.log(JSON.stringify(m.buildRandomizedConfig({name: 'Random Company'}), null, 2)))\" > PageConfig.json",
    "gen:preview": "npm run start",
    "gen:validate": "node -e \"import('./src/generator/composePage.ts').then(m => { try { const config = JSON.parse(require('fs').readFileSync('PageConfig.json', 'utf8')); m.validatePageConfig(config); console.log('✅ Configuration is valid'); } catch(e) { console.error('❌ Validation failed:', e.message); } })\"",
    "test:generator": "node -e \"import('./src/generator/composePage.ts').then(m => { const status = m.getRegistryStatus(); console.log('Registry status:', status); })\"",
    "variant:add": "node src/scripts/codegen/newVariant.ts",
    "variants:bulk": "node scripts/codegen/bulkAddVariants.js",
    "variants:hero": "npm run variants:bulk hero --per-style 10",
    "variants:navbar": "npm run variants:bulk navbar --per-style 10",
    "variants:socialProof": "npm run variants:bulk socialProof --per-style 10",
    "variants:features": "npm run variants:bulk features --per-style 10",
    "variants:featureSpotlight": "npm run variants:bulk featureSpotlight --per-style 10",
    "variants:testimonials": "npm run variants:bulk testimonials --per-style 10",
    "variants:metrics": "npm run variants:bulk metrics --per-style 10",
    "variants:pricing": "npm run variants:bulk pricing --per-style 10",
    "variants:faq": "npm run variants:bulk faq --per-style 10",
    "variants:finalCta": "npm run variants:bulk finalCta --per-style 10",
    "variants:footer": "npm run variants:bulk footer --per-style 10",
    "variants:all": "node -e \"['navbar','hero','socialProof','features','featureSpotlight','testimonials','metrics','pricing','faq','finalCta','footer'].forEach(s=>console.log('run: npm run variants:bulk',s))\"",
    "variants:load-metadata": "node scripts/loadVariantMetadata.js",
    "test": "vitest",
    "test:watch": "vitest --watch",
    "test:preview": "vitest src/tests/preview.state.test.ts",
    "test:fairness": "vitest src/tests/builders.fairness.test.ts",
    "test:all": "vitest src/tests/",
    "ai:plan:fake": "ts-node --esm src/ai/runFakePlan.ts",
    "ai:plan": "ts-node --esm src/ai/runModelPlan.ts --desc brandDescription.txt",
    "ai:plan:watch": "nodemon --exec 'npm run ai:plan' --watch brandDescription.txt",
    "test:ai": "vitest src/tests/ai.fakeModel.test.ts src/tests/planSchema.test.ts src/tests/applyPlan.test.ts",
    "test:nlu": "vitest src/tests/parseModelPlan.test.ts src/tests/extract.test.ts src/tests/run.test.ts",
    "test:all-ai": "vitest src/tests/ai.fakeModel.test.ts src/tests/planSchema.test.ts src/tests/applyPlan.test.ts src/tests/parseModelPlan.test.ts src/tests/extract.test.ts src/tests/run.test.ts"
  },
  "dependencies": {
    "@heroicons/react": "^2.2.0",
    "@tailwindcss/vite": "^4.0.15",
    "cors": "^2.8.5",
    "express": "^5.1.0",
    "framer-motion": "^12.23.12",
    "hono": "^4.9.6",
    "lucide-react": "^0.484.0",
    "prop-types": "^15.8.1",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "react-router-dom": "^7.4.0",
    "styled-components": "^6.1.16",
    "tailwindcss": "^4.0.15",
    "zod": "^3.22.4",
    "zustand": "^4.4.7"
  },
  "devDependencies": {
    "@eslint/js": "^9.21.0",
    "@testing-library/jest-dom": "^6.0.0",
    "@testing-library/react": "^15.0.0",
    "@testing-library/user-event": "^14.0.0",
    "@types/react": "^19.0.10",
    "@types/react-dom": "^19.0.4",
    "@vitejs/plugin-react-swc": "^3.8.0",
    "eslint": "^9.21.0",
    "eslint-plugin-react-hooks": "^5.1.0",
    "eslint-plugin-react-refresh": "^0.4.19",
    "globals": "^15.15.0",
    "jsdom": "^23.0.0",
    "nodemon": "^3.0.0",
    "run-p": "^0.0.0",
    "ts-node": "^10.9.0",
    "tsx": "^4.20.5",
    "typescript": "^5.0.0",
    "vite": "^6.2.0",
    "vitest": "^1.0.0"
  }
}
